# Generated by Django 2.0.6 on 2018-08-28 08:44

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=16, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=32, verbose_name='name')),
                ('join_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date of join')),
            ],
            options={
                'verbose_name': 'employee',
            },
        ),
        migrations.CreateModel(
            name='ExamRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.IntegerField(default=0, verbose_name='score')),
                ('exam_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='date of exam')),
                ('lib_name', models.CharField(max_length=32, null=True, verbose_name='question lib name')),
                ('question_answer', models.TextField(blank=True, null=True)),
                ('is_pass', models.BooleanField(default=0, verbose_name='is pass ?')),
                ('exam_count', models.IntegerField(default=0, verbose_name='count of exam')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_record', to='app01.Employee')),
            ],
            options={
                'verbose_name': 'the record of exam',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField(max_length=1000, unique=True, verbose_name='question')),
                ('option_a', models.CharField(max_length=64, null=True, verbose_name='option_a')),
                ('option_b', models.CharField(max_length=64, null=True, verbose_name='option_b')),
                ('option_c', models.CharField(max_length=64, null=True, verbose_name='option_c')),
                ('option_d', models.CharField(max_length=64, null=True, verbose_name='option_d')),
                ('right_key', models.CharField(max_length=64, null=True, verbose_name='right key')),
                ('answer', models.CharField(max_length=64, verbose_name='Completion answer')),
                ('is_right', models.BooleanField(default=0, verbose_name='Judgment problem answer')),
                ('type', models.CharField(choices=[(1, 'Choice question 选择题'), (2, 'Completion 填空题'), (3, 'Judgment problem 判断题'), (4, 'Short Answer Questions 简答题')], max_length=1)),
            ],
            options={
                'verbose_name': 'the questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionLib',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='lib name')),
                ('question', models.ManyToManyField(related_name='question_lib', to='app01.Question')),
            ],
            options={
                'verbose_name': 'the lib of question',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('level', models.IntegerField(choices=[(0, 'user'), (1, 'admin')], default=0, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to='app01.Role'),
        ),
    ]
